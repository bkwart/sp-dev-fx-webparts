{"version":3,"sources":["webparts/SearchUtils.ts"],"names":[],"mappings":";AA0CA;IAAA;IAyCA,CAAC;IAxCe,+BAAmB,GAAjC,UAAkC,GAAW,EAAE,OAAgB;QAC7D,IAAI,KAAK,GAAW,SAAS,CAAC;QAE9B,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;YACzC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChD,IAAM,UAAU,GAAU,OAAO,CAAC,CAAC,CAAC,CAAC;gBACrC,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC3B,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;oBACzB,KAAK,CAAC;gBACR,CAAC;YACH,CAAC;QACH,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEa,8BAAkB,GAAhC,UAAiC,MAAe,EAAE,OAAe;QAC/D,IAAM,QAAQ,GAAW,WAAW,CAAC,mBAAmB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAC7E,IAAM,MAAM,GAAW,WAAW,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzE,IAAM,KAAK,GAAW,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACvE,IAAM,KAAK,GAAW,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACvE,EAAE,CAAC,CAAC,QAAQ,IAAI,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;YACzC,MAAM,CAAI,OAAO,8CAAyC,QAAQ,kBAAa,MAAM,iBAAY,KAAK,eAAU,KAAK,2EACtD,CAAC;QAClE,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAEa,yBAAa,GAA3B,UAA4B,QAAgB;QAC1C,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,KAAK,IAAI;gBACP,MAAM,CAAC,QAAQ,CAAC;YAClB,KAAK,IAAI;gBACP,MAAM,CAAC,UAAU,CAAC;YACpB;gBACE,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;IACH,CAAC;IACH,kBAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCY,kCAAW","file":"webparts/SearchUtils.js","sourcesContent":["export interface ISearchQueryResponse {\n  PrimaryQueryResult: IPrimaryQueryResult;\n}\n\nexport interface IPrimaryQueryResult {\n  RelevantResults?: IRelevantResults;\n}\n\nexport interface IRelevantResults {\n  RowCount: number;\n  Table?: ITable;\n}\n\nexport interface ITable {\n  Rows?: IRow[];\n}\n\nexport interface IRow {\n  Cells: ICell[];\n}\n\nexport interface ICell {\n  Key: string;\n  Value: string;\n  ValueType: string;\n}\n\nexport interface IEdge {\n  ActorId: number;\n  ObjectId: number;\n  Properties: IEdgeProperties;\n}\n\nexport interface IEdgeProperties {\n  Action: number;\n  Blob: any[];\n  BlobContent: string;\n  ObjectSource: number;\n  Time: string;\n  Weight: number;\n}\n\nexport class SearchUtils {\n  public static getValueFromResults(key: string, results: ICell[]): string {\n    let value: string = undefined;\n\n    if (results && results.length > 0 && key) {\n      for (let i: number = 0; i < results.length; i++) {\n        const resultItem: ICell = results[i];\n        if (resultItem.Key === key) {\n          value = resultItem.Value;\n          break;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  public static getPreviewImageUrl(result: ICell[], siteUrl: string): string {\n    const uniqueID: string = SearchUtils.getValueFromResults('uniqueID', result);\n    const siteId: string = SearchUtils.getValueFromResults('siteID', result);\n    const webId: string = SearchUtils.getValueFromResults('webID', result);\n    const docId: string = SearchUtils.getValueFromResults('DocId', result);\n    if (uniqueID && siteId && webId && docId) {\n      return `${siteUrl}/_layouts/15/getpreview.ashx?guidFile=${uniqueID}&guidSite=${siteId}&guidWeb=${webId}&docid=${docId}\n      &metadatatoken=300x424x2&ClientType=CodenameOsloWeb&size=small`;\n    }\n    else {\n      return '';\n    }\n  }\n\n  public static getActionName(actionId: number): string {\n    switch (actionId) {\n      case 1001:\n        return 'Viewed';\n      case 1003:\n        return 'Modified';\n      default:\n        return '';\n    }\n  }\n}"],"sourceRoot":"..\\..\\src"}