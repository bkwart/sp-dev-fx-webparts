{"version":3,"sources":["webparts/myRecentDocuments/components/MyRecentDocuments.tsx"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAC/B,iEAOgC;AAEhC,kFAAsD;AAEtD,8CAA6I;AAG7I,iDAA0F;AAC1F,qCAAoC;AAapC;IAA+C,qCAAiE;IAC9G,2BAAY,KAA8B,EAAE,KAA8B;QAA1E,YACE,kBAAM,KAAK,CAAC,SAOb;QALC,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,EAAyB;YACtC,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,IAAI;SACZ,CAAC;;IACJ,CAAC;IAEM,6CAAiB,GAAxB;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACzE,CAAC;IAEM,8CAAkB,GAAzB,UAA0B,SAAkC,EAAE,SAAkC,EAAE,WAAgB;QAChH,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,KAAK,SAAS,CAAC,iBAAiB;YAC9D,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO,IAAI,CAC1C,IAAI,CAAC,KAAK,CAAC,iBAAiB,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CACnD,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAEM,kCAAM,GAAb;QACE,IAAM,OAAO,GAAgB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,6BAAK,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE;YAAE,oBAAC,gCAAO,IAAC,KAAK,EAAE,YAAY,GAAI,CAAM,GAAG,gCAAM,CAAC;QACpI,IAAM,KAAK,GAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;YAAK,8CAAwB;;YAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAO,GAAG,gCAAM,CAAC;QAC9G,IAAM,SAAS,GAAkB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,GAAsB,EAAE,CAAS;YAC5F,IAAM,OAAO,GAAW,qHAAmH,GAAG,CAAC,SAAS,SAAM,CAAC;YAC/J,MAAM,CAAC,CACL,oBAAC,qCAAY,IAAC,WAAW,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;gBAC7C,oBAAC,4CAAmB,IAClB,aAAa,EAAE;wBACb;4BACE,eAAe,EAAE,GAAG,CAAC,eAAe;4BACpC,OAAO,EAAE,OAAO;4BAChB,KAAK,EAAE,GAAG;4BACV,MAAM,EAAE,GAAG;4BACX,WAAW,EAAE,SAAS;yBACvB;qBACF,GACC;gBACJ,oBAAC,0CAAiB,IAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG;gBACtC,oBAAC,6CAAoB,IACnB,QAAQ,EAAK,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAI,GAAG,CAAC,QAAQ,CAAC,IAAM,EACrD,MAAM,EACJ;wBACE,EAAE,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE;qBAC9E,GAED,CACS,CAChB,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,CACL,6BAAK,SAAS,EAAE,uCAAM,CAAC,iBAAiB;YACtC,6BAAK,SAAS,EAAE,4BAAG,CAAC,YAAY,EAAE,uCAAM,CAAC,YAAY,CAAC,IAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAO;YAC/E,OAAO;YACP,KAAK;YACL,SAAS;YACV,6BAAK,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAC5B,CACP,CAAC;IACJ,CAAC;IAEO,2CAAe,GAAvB,UAAwB,OAAe,EAAE,iBAAyB;QAAlE,iBAyFC;QAxFC,IAAM,WAAW,GAAwB,EAAE,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAI,OAAO,mhBAAwgB,iBAAiB,0FAAuF,EAAE,sBAAY,CAAC,cAAc,CAAC,EAAE,EAAE;YACprB,OAAO,EAAE;gBACP,QAAQ,EAAE,mCAAmC;gBAC7C,eAAe,EAAE,EAAE;aACpB;SACF,CAAC;aACC,IAAI,CAAC,UAAC,QAA8B;YACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,QAA8B;YACnC,EAAE,CAAC,CAAC,CAAC,QAAQ;gBACX,CAAC,QAAQ,CAAC,kBAAkB;gBAC5B,CAAC,QAAQ,CAAC,kBAAkB,CAAC,eAAe;gBAC5C,QAAQ,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7D,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAC3B,CAAC;YAED,IAAI,OAAO,GAAW,SAAS,CAAC;YAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/F,IAAM,GAAG,GAAS,QAAQ,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5E,IAAM,KAAK,GAAY,IAAI,CAAC,KAAK,CAAC,yBAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvF,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrB,QAAQ,CAAC;gBACX,CAAC;gBAED,mFAAmF;gBACnF,IAAI,UAAU,GAAU,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrB,IAAI,cAAc,GAAS,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAChE,GAAG,CAAC,CAAC,IAAI,GAAC,GAAW,CAAC,EAAE,GAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAC,EAAE,EAAE,CAAC;wBAC9C,IAAM,QAAQ,GAAS,IAAI,IAAI,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;wBAC1D,EAAE,CAAC,CAAC,QAAQ,GAAG,cAAc,CAAC,CAAC,CAAC;4BAC9B,UAAU,GAAG,KAAK,CAAC,GAAC,CAAC,CAAC;4BACtB,cAAc,GAAG,QAAQ,CAAC;wBAC5B,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACb,4EAA4E;oBAC5E,gFAAgF;oBAChF,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;gBAC/B,CAAC;gBAED,IAAM,KAAK,GAAY,GAAG,CAAC,KAAK,CAAC;gBACjC,IAAM,IAAI,GAAS,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACxD,IAAM,UAAU,GAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnG,WAAW,CAAC,IAAI,CAAC;oBACf,EAAE,EAAE,yBAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC;oBACnD,GAAG,EAAE,yBAAW,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,KAAK,CAAC;oBAClE,KAAK,EAAE,yBAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC;oBACtD,eAAe,EAAE,yBAAW,CAAC,kBAAkB,CAAC,KAAK,EAAE,OAAO,CAAC;oBAC/D,SAAS,EAAE,yBAAW,CAAC,mBAAmB,CAAC,UAAU,EAAE,KAAK,CAAC;oBAC7D,QAAQ,EAAE;wBACR,OAAO,EAAE,UAAU,CAAC,OAAO;wBAC3B,IAAI,EAAE,UAAU;wBAChB,IAAI,EAAE,yBAAW,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC;qBAC9D;iBACF,CAAC,CAAC;YACL,CAAC;YAED,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC9C,CAAC,CAAC;YACF,IAAI,CAAC,UAAC,gBAAmC;YACvC,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACpD,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,KAAK,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC5D,QAAQ,CAAC;oBACX,CAAC;oBAED,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC;oBAC1D,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,GAAG,gBAAgB,CAAC,QAAQ,CAAC;gBACpE,CAAC;YACH,CAAC;YAED,KAAI,CAAC,QAAQ,CAAC;gBACZ,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,IAAI;gBACX,WAAW,EAAE,WAAW;aACzB,CAAC,CAAC;QACL,CAAC,EAAE,UAAC,KAAU;YACZ,KAAI,CAAC,QAAQ,CAAC;gBACZ,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,EAAE;aAChB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,yCAAa,GAArB,UAAsB,OAAe,EAAE,OAAe;QAAtD,iBAmCC;QAlCC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;QAED,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAsD,EAAE,MAA4B;YACtG,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAI,OAAO,6CAAwC,OAAO,8HAA2H,EAAE,sBAAY,CAAC,cAAc,CAAC,EAAE,EAAG;gBAC/O,OAAO,EAAE;oBACP,QAAQ,EAAE,mCAAmC;oBAC7C,eAAe,EAAE,EAAE;iBACpB;aACF,CAAC;iBACC,IAAI,CAAC,UAAC,QAA8B;gBACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,QAA8B;gBACnC,EAAE,CAAC,CAAC,CAAC,QAAQ;oBACX,CAAC,QAAQ,CAAC,kBAAkB;oBAC5B,CAAC,QAAQ,CAAC,kBAAkB,CAAC,eAAe;oBAC5C,QAAQ,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7D,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAC3B,CAAC;gBAED,IAAM,KAAK,GAAY,QAAQ,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAEvF,OAAO,CAAC;oBACN,KAAK,EAAE,yBAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,KAAK,CAAC;oBAC1D,EAAE,EAAE,QAAQ,CAAC,yBAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;oBAC7D,IAAI,EAAE,yBAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC;oBACrD,QAAQ,EAAE,aAAK,CAAC,eAAe,CAAC,yBAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC;iBAC9F,CAAC,CAAC;YACL,CAAC,EAAE,UAAC,KAAU;gBACZ,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAhMA,AAgMC,CAhM8C,KAAK,CAAC,SAAS,GAgM7D","file":"webparts/myRecentDocuments/components/MyRecentDocuments.js","sourcesContent":["import * as React from 'react';\nimport {\n  css,\n  DocumentCard,\n  DocumentCardPreview,\n  DocumentCardTitle,\n  DocumentCardActivity,\n  Spinner\n} from 'office-ui-fabric-react';\n\nimport styles from '../MyRecentDocuments.module.scss';\nimport { IMyRecentDocumentsWebPartProps } from '../IMyRecentDocumentsWebPartProps';\nimport { SPHttpClient, SPHttpClientConfiguration, SPHttpClientResponse, ODataVersion, ISPHttpClientConfiguration } from '@microsoft/sp-http';\nimport { ITrendingDocument } from '../../ITrendingDocument';\nimport { IActorInformation } from '../../IActorInformation';\nimport { SearchUtils, ISearchQueryResponse, IRow, ICell, IEdge } from '../../SearchUtils';\nimport { Utils } from '../../Utils';\n\nexport interface IMyRecentDocumentsProps extends IMyRecentDocumentsWebPartProps {\n  httpClient: SPHttpClient;\n  siteUrl: string;\n}\n\nexport interface IMyRecentDocumentsState {\n  myDocuments: ITrendingDocument[];\n  loading: boolean;\n  error: string;\n}\n\nexport default class MyRecentDocuments extends React.Component<IMyRecentDocumentsProps, IMyRecentDocumentsState> {\n  constructor(props: IMyRecentDocumentsProps, state: IMyRecentDocumentsState) {\n    super(props);\n\n    this.state = {\n      myDocuments: [] as ITrendingDocument[],\n      loading: true,\n      error: null\n    };\n  }\n\n  public componentDidMount(): void {\n    this.loadMyDocuments(this.props.siteUrl, this.props.numberOfDocuments);\n  }\n\n  public componentDidUpdate(prevProps: IMyRecentDocumentsProps, prevState: IMyRecentDocumentsState, prevContext: any): void {\n    if (this.props.numberOfDocuments !== prevProps.numberOfDocuments ||\n      this.props.siteUrl !== prevProps.siteUrl && (\n        this.props.numberOfDocuments && this.props.siteUrl\n      )) {\n      this.loadMyDocuments(this.props.siteUrl, this.props.numberOfDocuments);\n    }\n  }\n\n  public render(): JSX.Element {\n    const loading: JSX.Element = this.state.loading ? <div style={{ margin: '0 auto' }}><Spinner label={'Loading...'} /></div> : <div/>;\n    const error: JSX.Element = this.state.error ? <div><strong>Error: </strong> {this.state.error}</div> : <div/>;\n    const documents: JSX.Element[] = this.state.myDocuments.map((doc: ITrendingDocument, i: number) => {\n      const iconUrl: string = `https://spoprod-a.akamaihd.net/files/odsp-next-prod_ship-2016-08-15_20160815.002/odsp-media/images/filetypes/32/${doc.extension}.png`;\n      return (\n        <DocumentCard onClickHref={doc.url} key={doc.id}>\n          <DocumentCardPreview\n            previewImages={[\n              {\n                previewImageSrc: doc.previewImageUrl,\n                iconSrc: iconUrl,\n                width: 318,\n                height: 196,\n                accentColor: '#ce4b1f'\n              }\n            ]}\n            />\n          <DocumentCardTitle title={doc.title}/>\n          <DocumentCardActivity\n            activity={`${doc.activity.name} ${doc.activity.date}`}\n            people={\n              [\n                { name: doc.activity.actorName, profileImageSrc: doc.activity.actorPhotoUrl }\n              ]\n            }\n            />\n        </DocumentCard>\n      );\n    });\n    return (\n      <div className={styles.myRecentDocuments}>\n        <div className={css('ms-font-xl', styles.webPartTitle)}>{this.props.title}</div>\n        {loading}\n        {error}\n        {documents}\n        <div style={{ clear: 'both' }}/>\n      </div>\n    );\n  }\n\n  private loadMyDocuments(siteUrl: string, numberOfDocuments: number): void {\n    const myDocuments: ITrendingDocument[] = [];\n    this.props.httpClient.get(`${siteUrl}/_api/search/query?querytext='*'&properties='GraphQuery:actor(me\\\\,or(action\\\\:1001\\\\,action\\\\:1003)),GraphRankingModel:{\"features\"\\\\:[{\"function\"\\\\:\"EdgeTime\"}]}'&selectproperties='Author,AuthorOwsUser,DocId,DocumentPreviewMetadata,Edges,EditorOwsUser,FileExtension,FileType,HitHighlightedProperties,HitHighlightedSummary,LastModifiedTime,LikeCountLifetime,ListID,ListItemID,OriginalPath,Path,Rank,SPWebUrl,SecondaryFileExtension,ServerRedirectedURL,SiteTitle,Title,ViewCountLifetime,siteID,uniqueID,webID'&rowlimit=${numberOfDocuments}&ClientType='MyRecentDocuments'&RankingModelId='0c77ded8-c3ef-466d-929d-905670ea1d72'`, SPHttpClient.configurations.v1, {\n      headers: {\n        'Accept': 'application/json;odata=nometadata',\n        'odata-version': ''\n      }\n    })\n      .then((response: SPHttpClientResponse): Promise<ISearchQueryResponse> => {\n        return response.json();\n      })\n      .then((response: ISearchQueryResponse): Promise<IActorInformation> => {\n        if (!response ||\n          !response.PrimaryQueryResult ||\n          !response.PrimaryQueryResult.RelevantResults ||\n          response.PrimaryQueryResult.RelevantResults.RowCount === 0) {\n          return Promise.resolve();\n        }\n\n        let actorId: number = undefined;\n        for (let i: number = 0; i < response.PrimaryQueryResult.RelevantResults.Table.Rows.length; i++) {\n          const row: IRow = response.PrimaryQueryResult.RelevantResults.Table.Rows[i];\n          const edges: IEdge[] = JSON.parse(SearchUtils.getValueFromResults('Edges', row.Cells));\n          if (edges.length < 1) {\n            continue;\n          }\n\n          // we can get multiple edges back so let's show the information from the latest one\n          let latestEdge: IEdge = edges[0];\n          if (edges.length > 1) {\n            let latestEdgeDate: Date = new Date(latestEdge.Properties.Time);\n            for (let i: number = 1; i < edges.length; i++) {\n              const edgeDate: Date = new Date(edges[i].Properties.Time);\n              if (edgeDate > latestEdgeDate) {\n                latestEdge = edges[i];\n                latestEdgeDate = edgeDate;\n              }\n            }\n          }\n\n          if (!actorId) {\n            // since all edges that we're retrieving are personal (I viewed, I modified)\n            // we only need to get the actor ID once because it's the same on all edges (me)\n            actorId = latestEdge.ActorId;\n          }\n\n          const cells: ICell[] = row.Cells;\n          const date: Date = new Date(latestEdge.Properties.Time);\n          const dateString: string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n          myDocuments.push({\n            id: SearchUtils.getValueFromResults('DocId', cells),\n            url: SearchUtils.getValueFromResults('ServerRedirectedURL', cells),\n            title: SearchUtils.getValueFromResults('Title', cells),\n            previewImageUrl: SearchUtils.getPreviewImageUrl(cells, siteUrl),\n            extension: SearchUtils.getValueFromResults('FileType', cells),\n            activity: {\n              actorId: latestEdge.ActorId,\n              date: dateString,\n              name: SearchUtils.getActionName(latestEdge.Properties.Action)\n            }\n          });\n        }\n\n        return this.getActorsInfo(actorId, siteUrl);\n      }).\n      then((actorInformation: IActorInformation): void => {\n        if (actorInformation) {\n          for (let i: number = 0; i < myDocuments.length; i++) {\n            if (myDocuments[i].activity.actorId !== actorInformation.id) {\n              continue;\n            }\n\n            myDocuments[i].activity.actorName = actorInformation.name;\n            myDocuments[i].activity.actorPhotoUrl = actorInformation.photoUrl;\n          }\n        }\n\n        this.setState({\n          loading: false,\n          error: null,\n          myDocuments: myDocuments\n        });\n      }, (error: any): void => {\n        this.setState({\n          loading: false,\n          error: error,\n          myDocuments: []\n        });\n      });\n  }\n\n  private getActorsInfo(actorId: number, siteUrl: string): Promise<IActorInformation> {\n    if (!actorId) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve: (actorInformation: IActorInformation) => void, reject: (error: any) => void): void => {\n      this.props.httpClient.get(`${siteUrl}/_api/search/query?querytext='WorkId:${actorId}'&selectproperties='DocId,Title,WorkEmail'&ClientType='MyRecentDocuments'&SourceId='b09a7990-05ea-4af9-81ef-edfab16c4e31'`, SPHttpClient.configurations.v1 , {\n        headers: {\n          'Accept': 'application/json;odata=nometadata',\n          'odata-version': ''\n        }\n      })\n        .then((response: SPHttpClientResponse): Promise<ISearchQueryResponse> => {\n          return response.json();\n        })\n        .then((response: ISearchQueryResponse): Promise<IActorInformation> => {\n          if (!response ||\n            !response.PrimaryQueryResult ||\n            !response.PrimaryQueryResult.RelevantResults ||\n            response.PrimaryQueryResult.RelevantResults.RowCount === 0) {\n            return Promise.resolve();\n          }\n\n          const cells: ICell[] = response.PrimaryQueryResult.RelevantResults.Table.Rows[0].Cells;\n\n          resolve({\n            email: SearchUtils.getValueFromResults('WorkEmail', cells),\n            id: parseInt(SearchUtils.getValueFromResults('DocId', cells)),\n            name: SearchUtils.getValueFromResults('Title', cells),\n            photoUrl: Utils.getUserPhotoUrl(SearchUtils.getValueFromResults('WorkEmail', cells), siteUrl)\n          });\n        }, (error: any): void => {\n          reject(error);\n        });\n    });\n  }\n}\n"],"sourceRoot":"..\\..\\..\\..\\src"}